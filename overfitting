import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score

# Load the dataset (replace with your own dataset)
# For example, we use the iris dataset
from sklearn.datasets import load_iris
data = load_iris()
X = data.data
y = data.target

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the model
model = DecisionTreeClassifier(random_state=42)
model.fit(X_train, y_train)

# Evaluate the model on the training set
train_predictions = model.predict(X_train)
train_accuracy = accuracy_score(y_train, train_predictions)
print(f'Training accuracy: {train_accuracy:.4f}')

# Evaluate the model on the testing set
test_predictions = model.predict(X_test)
test_accuracy = accuracy_score(y_test, test_predictions)
print(f'Testing accuracy: {test_accuracy:.4f}')

# Check for overfitting
if train_accuracy > test_accuracy:
    print("The model is likely overfitting.")
else:
    print("The model is likely not overfitting.")
